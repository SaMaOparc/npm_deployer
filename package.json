{
  "name": "deployer2000",
  "version": "1.0.12",
  "scripts": {
    "main": "creator.js",
    "create": "touch Dockerfile && touch nginx.conf && mkdir .github && mkdir .github/workflows && touch .github/workflows/main.yaml && node creator.js",
    "postcreate": "echo '#IMPORTANT!!!! PLEASE CHANGE THE PATH IN STAGE 2 = /app/dist/YOUR_NAME  ' > Dockerfile && echo '       ' >> Dockerfile && echo '# Stage 1' >> Dockerfile && echo 'FROM node:16.14.0 as node' >> Dockerfile && echo 'WORKDIR /app' >> Dockerfile && echo 'COPY first_npm .' >> Dockerfile && echo 'RUN npm install' >> Dockerfile && echo 'RUN npm run build --prod' >> Dockerfile && echo '# stage 2' >> Dockerfile && echo 'FROM nginx:alpine' >> Dockerfile && echo 'COPY --from=node  /app/dist/demo-login /usr/share/nginx/html' >> Dockerfile && echo 'COPY ./nginx.conf /etc/nginx/conf.d/default.conf' >> Dockerfile && echo 'CMD sed -i -e \"s/\\$PORT/\\$PORT/g\" /etc/nginx/conf.d/default.conf && nginx -g \"daemon off;\"' >> Dockerfile && echo 'server {' > nginx.conf && echo '  listen $PORT;' >> nginx.conf && echo '  location / {' >> nginx.conf && echo '    root   /usr/share/nginx/html;' >> nginx.conf && echo '    index  index.html;' >> nginx.conf && echo '  }' >> nginx.conf && echo '}' >> nginx.conf && echo 'name: Developer Portal Deployment to heroku.' > .github/workflows/main.yaml && echo '# Run workflow on every push to master branch.' >> .github/workflows/main.yaml && echo 'on: [push]' >> .github/workflows/main.yaml && echo '# Your workflows job.' >> .github/workflows/main.yaml && echo 'jobs:' >> .github/workflows/main.yaml && echo '  Portal-run:' >> .github/workflows/main.yaml && echo '    runs-on: ubuntu-22.04' >> .github/workflows/main.yaml && echo '    steps:' >> .github/workflows/main.yaml && echo '      - name: Checkout' >> .github/workflows/main.yaml && echo '        uses: actions/checkout@v2' >> .github/workflows/main.yaml && echo '  build:' >> .github/workflows/main.yaml && echo '    runs-on: ubuntu-latest' >> .github/workflows/main.yaml && echo '    steps:' >> .github/workflows/main.yaml && echo '      # Check-out your repository.' >> .github/workflows/main.yaml && echo '      - name: Checkout' >> .github/workflows/main.yaml && echo '        uses: actions/checkout@v2' >> .github/workflows/main.yaml && echo '      ###  IMPORTANT PART  ###' >> .github/workflows/main.yaml && echo '      - name: Build, Push and Release a Docker container to Heroku.' >> .github/workflows/main.yaml && echo '        uses: gonuit/heroku-docker-deploy@v1.3.3' >> .github/workflows/main.yaml && echo '        with:' >> .github/workflows/main.yaml && echo '          email: ${{ secrets.HEROKU_EMAIL }}' >> .github/workflows/main.yaml && echo '          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}' >> .github/workflows/main.yaml && echo '          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}' >> .github/workflows/main.yaml && echo '          dockerfile_directory: ./' >> .github/workflows/main.yaml && echo '          dockerfile_name: Dockerfile' >> .github/workflows/main.yaml && echo '          docker_options: -no-cache' >> .github/workflows/main.yaml && echo '          process_type: web' >> .github/workflows/main.yaml",
    "precreate": "touch Dockerfile && touch nginx.conf"
  },
  "author": "smartin",
  "license": "MIT",
  "keywords": [
    "heroku_deploy",
    "dockerized_heroku_deploy"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/Skydiver86/npm_deployer/tree/dev"
  },
  "devDependencies": {
    "@angular/cli": "^16.0.3"
  }
}
